{"version":3,"file":"static/js/25.f1c9161a.chunk.js","mappings":"qNACA,EAAuB,mBAAvB,EAAsD,wB,oBCDzCA,EAAc,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OAC5BA,EAAOC,QAAU,KACjBD,EAAOE,IACL,6EACJ,E,SCqDA,EA5Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,sCAAAC,OAAyCH,EAAO,YAEzDI,GAA6CC,EAAAA,EAAAA,KAArCC,EAAIF,EAAJE,KAAMC,EAAUH,EAAVG,WAAYC,EAAKJ,EAALI,MAAOC,EAAOL,EAAPK,QAEzBC,GAAa,OAAJJ,QAAI,IAAJA,EAAAA,EAAQ,CAAC,GAAlBI,KAMR,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAAQG,EAAAA,EAAAA,eAAwBV,GAClC,GAAG,CAACO,EAASP,KAGXW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGR,IAAcS,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACrBC,QAAQV,IAAUA,EAAMW,SACzBH,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,GAAS,CACRC,SAAUC,EAAAA,EACVC,QAAQ,UACRC,QAAQ,QACRC,WAAWC,EAAAA,EAAAA,GAAKC,GAAaZ,SAE5BL,GACCA,EACGkB,MAAM,EAAG,IACTC,KAAI,SAAAC,GAAqD,IAAlDC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAaH,EAAbG,cAAeC,EAASJ,EAATI,UACvC,OACErB,EAAAA,EAAAA,MAACO,EAAAA,EAAAA,GAAS,CAACC,SAAUc,EAAAA,EAAcpB,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OACEoB,QAASzC,EACTI,IAAG,kCAAAI,OAAoC6B,GACvCK,IAAKJ,EACLR,WAAWC,EAAAA,EAAAA,GAAKC,MAElBX,EAAAA,EAAAA,KAAA,KAAAD,SAAIkB,KACJpB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAAYmB,OARwBH,EAW7C,QAIZ,C","sources":["webpack://filmoteka/./src/components/Cast/Cast.module.css?c9ee","js/utils/ImageNotFound/ImageNotFound.js","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"cast__img\":\"Cast_cast__img__IB6ux\"};","export const imageExists = ({ target }) => {\n  target.onerror = null; // prevents looping\n  target.src =\n    'https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png';\n};\n","import clsx from 'clsx';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nimport Loader from 'components/Loader/LoaderScreen';\nimport { useData } from 'js/useData/useData';\n\nimport styled from './Cast.module.css';\nimport { childVariants, routeVariants } from 'js/AnimatedList/AnimatedList';\nimport MovieAPI from 'js/API_requests/MoviesAPI';\nimport { imageExists } from 'js/utils/ImageNotFound/ImageNotFound';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n\n  const { data, isFetching, error, getData } = useData();\n\n  const { cast } = data ?? {};\n\n  useEffect(() => {\n    getData(MovieAPI.getMovieDetail(url));\n  }, [getData, url]);\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {Boolean(error) && error.message}\n      <motion.ul\n        variants={routeVariants}\n        initial=\"initial\"\n        animate=\"final\"\n        className={clsx(styled.cast)}\n      >\n        {cast &&\n          cast\n            .slice(0, 10)\n            .map(({ id, profile_path, original_name, character }) => {\n              return (\n                <motion.li variants={childVariants} key={id}>\n                  <img\n                    onError={imageExists}\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={original_name}\n                    className={clsx(styled.cast__img)}\n                  />\n                  <p>{original_name}</p>\n                  <p>Character: {character}</p>\n                </motion.li>\n              );\n            })}\n      </motion.ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["imageExists","_ref","target","onerror","src","movieId","useParams","url","concat","_useData","useData","data","isFetching","error","getData","cast","useEffect","MovieAPI","_jsxs","_Fragment","children","_jsx","Loader","Boolean","message","motion","variants","routeVariants","initial","animate","className","clsx","styled","slice","map","_ref2","id","profile_path","original_name","character","childVariants","onError","alt"],"sourceRoot":""}